paths:
  /Chatbot/chat:
    post:
      tags:
        - Chatbot
      operationId: Chatbot.chat
      parameters:
        - name: userInput
          in: formData
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              response:
                type: string
      deprecated: false
  /Songs/recommend:
    post:
      tags:
        - Song
      summary: Remote method to launch recommendation engine
      operationId: Song.recommend
      parameters:
        - name: text
          in: formData
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/x-any'
      deprecated: false
  /Feeds/getFeeds:
    get:
      tags:
        - Feed
      summary: Remote method to retrieve all Feed records from database
      operationId: Feed.getFeeds
      parameters: []
      responses:
        '200':
          description: Request was successful
          schema:
            type: array
            items:
              $ref: '#/definitions/x-any'
      deprecated: false
  /Feeds/deleteFeed:
    delete:
      tags:
        - Feed
      summary: Remote method to delete Feed record from database
      operationId: Feed.deleteFeed
      parameters:
        - name: feedId
          in: path
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              response:
                type: object
      deprecated: false
  /Clients/register:
    post:
      tags:
        - Client
      summary: Remote method to register a new User
      operationId: Client.register
      parameters:
        - name: username
          in: formData
          required: false
          type: string
        - name: email
          in: formData
          required: false
          type: string
        - name: password
          in: formData
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              response:
                type: string
      deprecated: false
  /Clients/login:
    post:
      tags:
        - Client
      summary: Remote method to login as a user
      operationId: Client.login
      parameters:
        - name: username
          in: formData
          required: false
          type: string
        - name: password
          in: formData
          required: false
          type: string
      responses:
        '200':
          description: Request was successful
          schema:
            type: object
            properties:
              id:
                type: string
              created:
                type: string
              ttl:
                type: number
                format: double
      deprecated: false
  /Clients/logout:
    post:
      tags:
        - Client
      summary: Remote method to logout a user
      operationId: Client.logout
      parameters: []
      responses:
        '204':
          description: Request was successful
      deprecated: false
definitions:
  x-any:
    properties: {}
basePath: /api
swagger: '2.0'
info:
  x-ibm-name: backend
  version: 1.0.0
  title: backend
schemes:
  - https
host: $(catalog.host)
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  clientIdHeader:
    type: apiKey
    in: header
    name: X-IBM-Client-Id
  clientSecretHeader:
    in: header
    name: X-IBM-Client-Secret
    type: apiKey
security:
  - clientIdHeader: []
    clientSecretHeader: []
x-ibm-configuration:
  testable: true
  enforced: true
  cors:
    enabled: true
  catalogs:
    apic-dev:
      properties:
        runtime-url: $(TARGET_URL)
    sb:
      properties:
        runtime-url: 'http://localhost:4001'
  assembly:
    execute:
      - invoke:
          target-url: $(runtime-url)$(request.path)$(request.search)
